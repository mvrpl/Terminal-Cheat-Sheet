name: Release Chsht

on:
  push:
    tags:
      - "*"

jobs:
  goreleaser:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Setup dependencies
        if: matrix.runner == 'ubuntu-latest'
        run: |
          sudo apt-get update -q
          sudo apt-get install -qqy build-essential software-properties-common pkg-config wget libpcsclite-dev
      - name: Build darwin
        if: matrix.runner == 'macos-latest'
        run: |
          export CGO_ENABLE=1
          go mod tidy
          go build -o chsht-${{ matrix.name }} .
      - name: Build linux
        if: matrix.runner == 'ubuntu-latest'
        run: |
          export CGO_ENABLE=1
          go mod tidy
          go build -o chsht-${{ matrix.name }} .
      - name: Build windows
        if: matrix.runner == 'windows-latest'
        run: |
          export CGO_ENABLE=1
          go mod tidy
          go build -o chsht-${{ matrix.name }}.exe .
      - uses: actions/upload-artifact@v4
        with:
          name: awsu-${{ matrix.runner }}-amd64
          if: matrix.runner == 'windows-latest'
          path: chsht-${{ matrix.name }}.exe
      - uses: actions/upload-artifact@v4
        with:
          name: awsu-${{ matrix.runner }}-amd64
          if: matrix.runner != 'windows-latest'
          path: chsht-${{ matrix.name }}
